from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import ApplicationBuilder, CommandHandler, ContextTypes, CallbackQueryHandler

TOKEN = ''

# –ö–∞–Ω–∞–ª—ã:
AVANGARD_CHANNEL_ID = '-1002115530256'  # –ö–∞–Ω–∞–ª Avangard —Å —Ç–µ–º–∞–º–∏
ADMIN_CHANNEL_ID = '-1002542161157'     # –ö–∞–Ω–∞–ª Admin (–∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –≤ —Ä–µ–∂–∏–º–µ Debug)

ALLOWED_USERS = [
    178448316,  # Dasha
    393374272,  # Alena admin
    293592224   # Alena Yar
]

def check_access(update: Update):
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç, —Ä–∞–∑—Ä–µ—à–µ–Ω–æ –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –æ–±—Ä–∞—â–∞—Ç—å—Å—è –∫ –±–æ—Ç—É"""
    user_id = update.effective_user.id
    return user_id in ALLOWED_USERS

# –í–∞–ª–∏–¥–Ω—ã–µ –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä—ã —Ç–µ–º (—Ç–æ–ª—å–∫–æ –¥–ª—è –∫–∞–Ω–∞–ª–∞ Avangard)
VALID_TOPICS = {
    1: "–û–±—â–∞—è –±–æ–ª—Ç–∞–ª–∫–∞",
    2: "–ß–ü/SOS/–ê–°–ê–ü/HELP",
    563: "–°–∞–¥ –∏ –æ–≥–æ—Ä–æ–¥",
    2938: "–†–µ–º–æ–Ω—Ç –¥–æ—Ä–æ–≥–∏",
    6: "–õ—é–±–∏–º—ã–µ –ø–∏—Ç–æ–º—Ü—ã",
    18: "–†–µ–∫–ª–∞–º–∞ —É—Å–ª—É–≥/—Ç–æ–≤–∞—Ä–æ–≤",
    8484: "–ü–æ–ø—É—Ç—á–∏–∫–∏",
    13115: "–°–ø–æ—Ä—Ç",
    11: "–ü–æ–ª–µ–∑–Ω—ã–µ –∫–æ–Ω—Ç–∞–∫—Ç—ã",
    53: "–ê–¥—Ä–µ—Å–∞ —Å–æ—Å–µ–¥–µ–π",
    17081: "–í–æ–¥–∞ –∏ –µ–µ –∫–∞—á–µ—Å—Ç–≤–æ",
    26677: "–î–µ—Ç—Å–∫–∞—è –ø–ª–æ—â–∞–¥–∫–∞",
    14: "–û–±—Å—É–∂–¥–µ–Ω–∏–µ –æ—Ç–∫–∞—á–∫–∏ —Å–µ–ø—Ç–∏–∫–æ–≤"
}

# –•—Ä–∞–Ω–µ–Ω–∏–µ —Ç–µ–∫—É—â–µ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è –±–µ—Å–µ–¥—ã (—Ç–µ–∫—Å—Ç–∞ —Å–æ–æ–±—â–µ–Ω–∏—è)
current_messages = {}

# /start
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    if not check_access(update):
        await update.message.reply_text("–ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ª—É—á—à–µ–π –Ω–∞ —Å–≤–µ—Ç–µ –≥—Ä—É–ø–ø–æ–π - –ö–ü –ê–≤–∞–Ω–≥–∞—Ä–¥."
                                       "\n –£–ø—Å, –¥–æ—Å—Ç—É–ø –∫ –º–æ–∏–º –∫–æ–º–∞–Ω–¥–∞–º –¥–æ—Å—Ç—É–ø–µ–Ω –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω–æ–º—É –∫—Ä—É–≥—É –ª–∏—Ü,"
                                       "\n –∫ —Å–æ–∂–∞–ª–µ–Ω–∏—é, –í—ã –≤ —ç—Ç–æ—Ç –∫—Ä—É–≥ –Ω–µ –≤—Ö–æ–¥–∏—Ç–µ :(")
        return
    await update.message.reply_text("–ü—Ä–∏–≤–µ—Ç, –∞–¥–º–∏–Ω! –ü—Ä–∏—è—Ç–Ω–æ–≥–æ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∫–∞–Ω–∞–ª–æ–º :)")

# /send
async def send_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
    if not check_access(update):
        await update.message.reply_text("–î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â—ë–Ω")
        return

    args = context.args
    if len(args) == 0:
        await update.message.reply_text('–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /send <—Ç–µ–∫—Å—Ç>')
        return

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Ä–µ–∂–∏–º–∞ DEBUG
    use_debug = False
    if args[-1].lower() == 'debug':
        use_debug = True
        args = args[:-1]  # –û—Ç—Å–µ–∫–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–µ–µ —Å–ª–æ–≤–æ ('debug')

    # –°–æ–±–∏—Ä–∞–µ–º —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è
    message_text = ' '.join(args)

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ (—Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è)
    current_messages.update({update.effective_user.id: message_text})

    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ü–µ–ª–µ–≤–æ–π –∫–∞–Ω–∞–ª –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ä–µ–∂–∏–º–∞
    dest_channel = ADMIN_CHANNEL_ID if use_debug else AVANGARD_CHANNEL_ID

    # –ï—Å–ª–∏ –∫–∞–Ω–∞–ª Avangard, –ø—Ä–µ–¥–ª–∞–≥–∞–µ–º –≤—ã–±—Ä–∞—Ç—å —Ç–µ–º—É
    if dest_channel == AVANGARD_CHANNEL_ID:
        # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –≤—ã–±–æ—Ä–∞ —Ç–µ–º—ã
        keyboard_buttons = []
        for tid, tname in VALID_TOPICS.items():
            button = InlineKeyboardButton(tname, callback_data=f'send_{tid}')
            keyboard_buttons.append([button])
        reply_markup = InlineKeyboardMarkup(keyboard_buttons)
        await update.message.reply_text("–í—ã–±–µ—Ä–∏—Ç–µ —Ç–µ–º—É:", reply_markup=reply_markup)
    else:
        # –ï—Å–ª–∏ –∫–∞–Ω–∞–ª Admin, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–∞–ø—Ä—è–º—É—é
        try:
            await context.bot.send_message(chat_id=ADMIN_CHANNEL_ID, text=message_text)
            await update.message.reply_text(f"–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ –∫–∞–Ω–∞–ª Admin.")
        except Exception as e:
            await update.message.reply_text(f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {e}")

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—ã–±–æ—Ä–∞ —Ç–µ–º—ã (—Ç–æ–ª—å–∫–æ –¥–ª—è –∫–∞–Ω–∞–ª–∞ Avangard)
async def handle_topic_selection(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    await query.answer()

    # –ü–æ–ª—É—á–∞–µ–º –≤—ã–±—Ä–∞–Ω–Ω—É—é —Ç–µ–º—É
    selected_topic_id = int(query.data.split('_')[1])

    # –î–æ—Å—Ç–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–æ–æ–±—â–µ–Ω–∏–∏
    message_text = current_messages.pop(query.from_user.id, "")
    if not message_text:
        await query.edit_message_text(text="–°–æ–æ–±—â–µ–Ω–∏–µ –ø–æ—Ç–µ—Ä—è–ª–æ—Å—å. –ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–ø—ã—Ç–∫—É.")
        return

    try:
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –≤—ã–±—Ä–∞–Ω–Ω—É—é —Ç–µ–º—É
        await context.bot.send_message(chat_id=AVANGARD_CHANNEL_ID, text=message_text, message_thread_id=int(selected_topic_id))
        await query.edit_message_text(text=f"–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ —Ç–µ–º—É \"{VALID_TOPICS[int(selected_topic_id)]}\"!")
    except Exception as e:
        await query.edit_message_text(text=f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {e}")

# /warn
async def warn_user(update: Update, context: ContextTypes.DEFAULT_TYPE):
    if not check_access(update):
        await update.message.reply_text("–î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â—ë–Ω")
        return

    args = context.args
    if len(args) < 1:
        await update.message.reply_text('–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /warn <username>')
        return

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Ä–µ–∂–∏–º–∞ DEBUG
    use_debug = False
    if args[-1].lower() == 'debug':
        use_debug = True
        args = args[:-1]  # –û—Ç—Å–µ–∫–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–µ–µ —Å–ª–æ–≤–æ ('debug')

    username = args[0].strip('@')

    warning_message = f"""
        ‚ú® **–í–Ω–∏–º–∞–Ω–∏–µ, @{username}!**

        –í–∞–º –≤—ã–¥–∞–Ω–æ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ –∑–∞ –Ω–∞—Ä—É—à–µ–Ω–∏–µ –ø—Ä–∞–≤–∏–ª —Å–æ–æ–±—â–µ—Å—Ç–≤–∞.
        –ü–æ–≤—Ç–æ—Ä–Ω–æ–µ –Ω–∞—Ä—É—à–µ–Ω–∏–µ –ø—Ä–∏–≤–µ–¥–µ—Ç –∫ –í–∞—à–µ–º—É —É–¥–∞–ª–µ–Ω–∏—é –∏–∑ –≥—Ä—É–ø–ø—ã.
        """

    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ü–µ–ª–µ–≤–æ–π –∫–∞–Ω–∞–ª –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ä–µ–∂–∏–º–∞
    dest_channel = ADMIN_CHANNEL_ID if use_debug else AVANGARD_CHANNEL_ID

    # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –≤—ã–±–æ—Ä–∞ —Ç–µ–º—ã (—Ç–æ–ª—å–∫–æ –¥–ª—è Avangard)
    try:
        await context.bot.send_message(chat_id=dest_channel, text=warning_message)
        await update.message.reply_text(f"‚úÖ –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é @{username} –≤ –∫–∞–Ω–∞–ª –∞–¥–º–∏–Ω–æ–≤.")
    except Exception as e:
        await update.message.reply_text(f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {e}")

# /remove <user_id>
async def remove_user(update: Update, context: ContextTypes.DEFAULT_TYPE):
    if not check_access(update):
        await update.message.reply_text("–î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â—ë–Ω")
        return

    args = context.args
    if len(args) < 1 or not context.args[0].isdigit():
        await update.message.reply_text('–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /remove <user_id>')
        return

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Ä–µ–∂–∏–º–∞ DEBUG
    use_debug = False
    if args[-1].lower() == 'debug':
        use_debug = True
        args = args[:-1]  # –û—Ç—Å–µ–∫–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–µ–µ —Å–ª–æ–≤–æ ('debug')

    user_id = int(args[0])

    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ü–µ–ª–µ–≤–æ–π –∫–∞–Ω–∞–ª –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ä–µ–∂–∏–º–∞
    dest_channel = ADMIN_CHANNEL_ID if use_debug else AVANGARD_CHANNEL_ID

    try:
        await context.bot.ban_chat_member(chat_id=dest_channel, user_id=user_id)
        await update.message.reply_text(f"–£—á–∞—Å—Ç–Ω–∏–∫ —Å ID {user_id} —É–¥–∞–ª—ë–Ω –∏–∑ –∫–∞–Ω–∞–ª–∞.")
    except Exception as e:
        await update.message.reply_text(f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {e}")

# /help
async def show_help(update: Update, context: ContextTypes.DEFAULT_TYPE):
    if not check_access(update):
        await update.message.reply_text("–ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ª—É—á—à–µ–π –Ω–∞ —Å–≤–µ—Ç–µ –≥—Ä—É–ø–ø–æ–π - –ö–ü –ê–≤–∞–Ω–≥–∞—Ä–¥." \
        " –£–ø—Å, –¥–æ—Å—Ç—É–ø –∫ –º–æ–∏–º –∫–æ–º–∞–Ω–¥–∞–º –¥–æ—Å—Ç—É–ø–µ–Ω –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω–æ–º—É –∫—Ä—É–≥—É –ª–∏—Ü, –∫ —Å–æ–∂–∞–ª–µ–Ω–∏—é, –í—ã –≤ —ç—Ç–æ—Ç –∫—Ä—É–≥ –Ω–µ –≤—Ö–æ–¥–∏—Ç–µ :(")
        return

    help_text = """

–ê–¥–º–∏–Ω—ã, –Ω–∞–ø–æ–º–∏–Ω–∞—é:

- üìå **–û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π:**
/send <—Ç–µ–∫—Å—Ç> - –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π –≤ –∫–∞–Ω–∞–ª –ê–≤–∞–Ω–≥–∞—Ä–¥. –ë–æ—Ç –ø—Ä–µ–¥–ª–æ–∂–∏—Ç –≤—ã–±—Ä–∞—Ç—å —Ç–µ–º—É, –∫—É–¥–∞ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Ç–µ–∫—Å—Ç.\n
/send <—Ç–µ–∫—Å—Ç> debug - —Ç—Ä–µ–Ω–∏—Ä—É–µ–º—Å—è –Ω–∞ –∂–µ–Ω.—Å–æ–≤–µ—Ç–µ.

- ‚ö†Ô∏è **–ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:**
/warn <username> - –¥–ª—è –≤—ã–¥–∞—á–∏ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –≤ –∫–∞–Ω–∞–ª –ê–≤–∞–Ω–≥–∞—Ä–¥, –≤ –æ–±—â—É—é –±–æ–ª—Ç–∞–ª–∫—É.\n
/warn <username> debug - —Ç—Ä–µ–Ω–∏—Ä—É–µ–º—Å—è –Ω–∞ –∂–µ–Ω.—Å–æ–≤–µ—Ç–µ.

- ‚ö†Ô∏è **–£–¥–∞–ª–µ–Ω–∏–µ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤:**
/remove <user_id> - –¥–ª—è –∏—Å–∫–ª—é—á–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –∫–∞–Ω–∞–ª–∞ –ê–≤–∞–Ω–≥–∞—Ä–¥.\n
/remove <user_id> debug - —Ç—Ä–µ–Ω–∏—Ä—É–µ–º—Å—è –Ω–∞ –∂–µ–Ω.—Å–æ–≤–µ—Ç–µ.

- üìÑ **–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—è—Ö:**
/help - –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ.
"""
    await update.message.reply_text(help_text)

if __name__ == '__main__':
    application = ApplicationBuilder().token(TOKEN).build()

    application.add_handler(CommandHandler("start", start))
    application.add_handler(CommandHandler("send", send_message))
    application.add_handler(CommandHandler("warn", warn_user))
    application.add_handler(CommandHandler("remove", remove_user))
    application.add_handler(CommandHandler("help", show_help))
    application.add_handler(CallbackQueryHandler(handle_topic_selection, pattern=r'^send'))

    print("Bot is running...")
    application.run_polling()
